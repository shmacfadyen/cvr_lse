<?xml version="1.0" encoding="utf-8"?>

<launch>
  <!-- Launch File Arguments -->
  <arg name="project" default="cvr_lse"/>
  <arg name="lidar_topic" default="/points_raw"/>
  <arg name="imu_topic" default="/imu_raw"/>
  <arg name="lidar_frame" default="/velodyne"/>
  <arg name="lidar_sensor" default="velodyne"/>
  <arg name="min_range_lidar" default="1.0"/>
  <arg name="max_range_lidar" default="1000.0"/>
  <arg name="map_opt_cores" default="4"/>

  <!-- Configuration Override Arguments -->
  <arg name="enable_config_override" default="false"/>
  <arg name="config_override_dir" default="$(find cvr_lse)/config"/>

  <!-- Configuration Parameters -->
  <param name="/use_sim_time" value="true"/>

  <rosparam file="$(find lio_sam)/config/params.yaml" command="load" />
  <rosparam file="$(arg config_override_dir)/lio_sam_params.yaml" command="load" if="$(arg enable_config_override)"/>
  <rosparam command="load" subst_value="True">
lio_sam:
  # Topics
  pointCloudTopic: "$(arg lidar_topic)"
  imuTopic: "$(arg imu_topic)"

  # Frames
  lidarFrame: "$(arg lidar_frame)"

  # Sensor Settings
  sensor: "$(arg lidar_sensor)"
  lidarMinRange: $(arg min_range_lidar)
  lidarMaxRange: $(arg max_range_lidar)

  # CPU Params
  numberOfCores: $(arg map_opt_cores)
  </rosparam>
  
  <!--- Robot State TF -->
  <include file="$(find lio_sam)/launch/include/module_robot_state_publisher.launch" />
  
  <!-- LIO-SAM SLAM Processes - LOAM -->
  <include file="$(find lio_sam)/launch/include/module_loam.launch" />

  <!-- Segmentation/Obstacle Detection -->
  <node name="ground_segmentation" pkg="cvr_lse" type="ground_segmentation" output="screen">
    <rosparam command="load" file="$(find cvr_lse)/config/segmentation_params.yaml"/>
    <rosparam command="load" file="$(arg config_override_dir)/segmentation_params.yaml" if="$(arg enable_config_override)"/>
    <param name = "lidar_topic" value = "$(arg lidar_topic)" />
    <param name = "cloud_label_topic" value = "/ground_segmentation/cloud_label" />
  </node>
  
  <!-- Process for Compact Vectorized Representation of Local Static Environments -->
  <node name="$(arg project)" pkg="cvr_lse" type="cvr_lse" output="screen">
    <rosparam command="load" file="$(find cvr_lse)/config/cvr_lse_params.yaml"/>
    <rosparam command="load" file="$(arg config_override_dir)/cvr_lse_params.yaml" if="$(arg enable_config_override)"/>
    <param name="cvr_lse/max_distance" value="$(arg max_range_lidar)"/>

    <param name = "lidar_topic" value = "$(arg lidar_topic)" />
    <param name = "cloud_label_topic" value = "/ground_segmentation/cloud_label"/>
    <param name = "lidar_odom_topic" value = "/odometry/imu" />
    <param name = "ground_output_topic" value = "/cvr_lse/ground_cloud" />
    <param name = "obstacle_output_topic" value = "/cvr_lse/obstacle_cloud" />
    <param name = "lidar_frame" value = "$(arg lidar_frame)"/>
  </node>

  <!-- Visualization of Results -->
  <node pkg="rviz" type="rviz" name="$(arg project)_rviz" args="-d $(find cvr_lse)/config/rviz.rviz" />
</launch>
